services:
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - todo-frontend
      - todo-backend

  todo-frontend:
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
      args:
        VITE_BACKEND_URL: http://localhost:8080/api
    volumes:
      - ./todo-frontend/src:/app/src
      - ./todo-frontend/public:/app/public
      - ./todo-frontend/index.html:/app/index.html
      - ./todo-frontend/vite.config.js:/app/vite.config.js
      - ./todo-frontend/package.json:/app/package.json
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api
    command: npm run dev -- --host 0.0.0.0

  todo-backend:
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend/app.js:/app/app.js
      - ./todo-backend/bin:/app/bin
      - ./todo-backend/routes:/app/routes
      - ./todo-backend/mongo:/app/mongo
      - ./todo-backend/redis:/app/redis
      - ./todo-backend/util:/app/util
      - ./todo-backend/package.json:/app/package.json
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database?authSource=the_database
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis
    volumes:
      - ./todo-backend/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s 